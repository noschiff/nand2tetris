function Game.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push constant 85
pop static 0
push constant 6
call Array.new 1
pop this 0
push constant 6
call Array.new 1
pop this 1
push constant 6
call Array.new 1
pop this 2
push constant 0
push this 0
add
push constant 0
push static 0
call Math.multiply 2
push constant 0
push static 0
call Math.multiply 2
push static 0
call Tile.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push this 0
add
push constant 1
push static 0
call Math.multiply 2
push constant 0
push static 0
call Math.multiply 2
push static 0
call Tile.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push this 0
add
push constant 2
push static 0
call Math.multiply 2
push constant 0
push static 0
call Math.multiply 2
push static 0
call Tile.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push this 0
add
push constant 3
push static 0
call Math.multiply 2
push constant 0
push static 0
call Math.multiply 2
push static 0
call Tile.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push this 0
add
push constant 4
push static 0
call Math.multiply 2
push constant 0
push static 0
call Math.multiply 2
push static 0
call Tile.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push this 0
add
push constant 5
push static 0
call Math.multiply 2
push constant 0
push static 0
call Math.multiply 2
push static 0
call Tile.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push this 1
add
push constant 0
push static 0
call Math.multiply 2
push constant 1
push static 0
call Math.multiply 2
push static 0
call Tile.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push this 1
add
push constant 1
push static 0
call Math.multiply 2
push constant 1
push static 0
call Math.multiply 2
push static 0
call Tile.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push this 1
add
push constant 2
push static 0
call Math.multiply 2
push constant 1
push static 0
call Math.multiply 2
push static 0
call Tile.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push this 1
add
push constant 3
push static 0
call Math.multiply 2
push constant 1
push static 0
call Math.multiply 2
push static 0
call Tile.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push this 1
add
push constant 4
push static 0
call Math.multiply 2
push constant 1
push static 0
call Math.multiply 2
push static 0
call Tile.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push this 1
add
push constant 5
push static 0
call Math.multiply 2
push constant 1
push static 0
call Math.multiply 2
push static 0
call Tile.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push this 2
add
push constant 0
push static 0
call Math.multiply 2
push constant 2
push static 0
call Math.multiply 2
push static 0
call Tile.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push this 2
add
push constant 1
push static 0
call Math.multiply 2
push constant 2
push static 0
call Math.multiply 2
push static 0
call Tile.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push this 2
add
push constant 2
push static 0
call Math.multiply 2
push constant 2
push static 0
call Math.multiply 2
push static 0
call Tile.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push this 2
add
push constant 3
push static 0
call Math.multiply 2
push constant 2
push static 0
call Math.multiply 2
push static 0
call Tile.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push this 2
add
push constant 4
push static 0
call Math.multiply 2
push constant 2
push static 0
call Math.multiply 2
push static 0
call Tile.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push this 2
add
push constant 5
push static 0
call Math.multiply 2
push constant 2
push static 0
call Math.multiply 2
push static 0
call Tile.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
return
function Game.dispose 0
push argument 0
pop pointer 0
call square.dispose 0
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Game.run 2
push argument 0
pop pointer 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
not
not
if-goto WHILE_END0
call Keyboard.keyPressed 0
pop local 0
push local 0
push constant 81
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push constant 0
push this 0
add
pop pointer 1
push that 0
call Game.light 2
pop temp 0
label IF_FALSE0
push local 0
push constant 87
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push constant 1
push this 0
add
pop pointer 1
push that 0
call Game.light 2
pop temp 0
label IF_FALSE1
push local 0
push constant 69
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
push constant 2
push this 0
add
pop pointer 1
push that 0
call Game.light 2
pop temp 0
label IF_FALSE2
push local 0
push constant 82
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push pointer 0
push constant 3
push this 0
add
pop pointer 1
push that 0
call Game.light 2
pop temp 0
label IF_FALSE3
push local 0
push constant 84
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push pointer 0
push constant 4
push this 0
add
pop pointer 1
push that 0
call Game.light 2
pop temp 0
label IF_FALSE4
push local 0
push constant 89
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push pointer 0
push constant 5
push this 0
add
pop pointer 1
push that 0
call Game.light 2
pop temp 0
label IF_FALSE5
push local 0
push constant 65
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push pointer 0
push constant 0
push this 1
add
pop pointer 1
push that 0
call Game.light 2
pop temp 0
label IF_FALSE6
push local 0
push constant 83
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push pointer 0
push constant 1
push this 1
add
pop pointer 1
push that 0
call Game.light 2
pop temp 0
label IF_FALSE7
push local 0
push constant 68
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push pointer 0
push constant 2
push this 1
add
pop pointer 1
push that 0
call Game.light 2
pop temp 0
label IF_FALSE8
push local 0
push constant 70
eq
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push pointer 0
push constant 3
push this 1
add
pop pointer 1
push that 0
call Game.light 2
pop temp 0
label IF_FALSE9
push local 0
push constant 71
eq
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push pointer 0
push constant 4
push this 1
add
pop pointer 1
push that 0
call Game.light 2
pop temp 0
label IF_FALSE10
push local 0
push constant 72
eq
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push pointer 0
push constant 5
push this 1
add
pop pointer 1
push that 0
call Game.light 2
pop temp 0
label IF_FALSE11
push local 0
push constant 90
eq
if-goto IF_TRUE12
goto IF_FALSE12
label IF_TRUE12
push pointer 0
push constant 0
push this 2
add
pop pointer 1
push that 0
call Game.light 2
pop temp 0
label IF_FALSE12
push local 0
push constant 88
eq
if-goto IF_TRUE13
goto IF_FALSE13
label IF_TRUE13
push pointer 0
push constant 1
push this 2
add
pop pointer 1
push that 0
call Game.light 2
pop temp 0
label IF_FALSE13
push local 0
push constant 67
eq
if-goto IF_TRUE14
goto IF_FALSE14
label IF_TRUE14
push pointer 0
push constant 2
push this 2
add
pop pointer 1
push that 0
call Game.light 2
pop temp 0
label IF_FALSE14
push local 0
push constant 86
eq
if-goto IF_TRUE15
goto IF_FALSE15
label IF_TRUE15
push pointer 0
push constant 3
push this 2
add
pop pointer 1
push that 0
call Game.light 2
pop temp 0
label IF_FALSE15
push local 0
push constant 66
eq
if-goto IF_TRUE16
goto IF_FALSE16
label IF_TRUE16
push pointer 0
push constant 4
push this 2
add
pop pointer 1
push that 0
call Game.light 2
pop temp 0
label IF_FALSE16
push local 0
push constant 78
eq
if-goto IF_TRUE17
goto IF_FALSE17
label IF_TRUE17
push pointer 0
push constant 5
push this 2
add
pop pointer 1
push that 0
call Game.light 2
pop temp 0
label IF_FALSE17
push local 0
push constant 0
eq
if-goto IF_TRUE18
goto IF_FALSE18
label IF_TRUE18
call Screen.clearScreen 0
pop temp 0
label IF_FALSE18
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Game.light 0
push argument 0
pop pointer 0
push argument 1
call Tile.draw 1
pop temp 0
push constant 0
return
